{"version":3,"sources":["componentes/Header.jsx","componentes/Formulario.jsx","helper.js","componentes/Resumen.jsx","componentes/Resultado.jsx","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Formulario","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","cotizarSeguro","e","preventDefault","plan","_this","current","checked","infoAuto","marca","value","year","className","onSubmit","this","name","ref","type","defaultChecked","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","_this$props$datos","datos","mostrarResumen","Resultado","resultado","mensaje","react_transition_group","component","classNames","key","timeout","enter","exit","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","diferenia","Date","getFullYear","obtenerDiferenciaAnio","console","log","modelo","incremento","calcularMarca","parseFloat","obtenerPlan","toFixed","datosAuto","setState","state","componentes_Header","componentes_Formulario","componentes_Resumen","componentes_Resultado","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOAUeA,EARA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKH,EAAMI,UCgFFC,6MAjFbC,SAAWC,IAAMC,cACjBC,QAAUF,IAAMC,cAChBE,cAAgBH,IAAMC,cACtBG,gBAAkBJ,IAAMC,cAExBI,cAAgB,SAAAC,GACdA,EAAEC,iBAEF,IAAMC,EAAOC,EAAKN,cAAcO,QAAQC,QAAU,SAAW,WAKvDC,EAAW,CACfC,MAAOJ,EAAKV,SAASW,QAAQI,MAC7BC,KAAMN,EAAKP,QAAQQ,QAAQI,MAC3BN,KAAMA,GAIRC,EAAKhB,MAAMY,cAAcO,4EAOzB,OACElB,EAAAC,EAAAC,cAAA,QAAMoB,UAAU,eAAeC,SAAUC,KAAKb,eAC5CX,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,SACbtB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQuB,KAAK,QAAQC,IAAKF,KAAKnB,UAC7BL,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,aAAd,aACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,WAAd,WACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,YAAd,cAIJpB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,SACbtB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQuB,KAAK,OAAOC,IAAKF,KAAKhB,SAC5BR,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,UAGJpB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,SACbtB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEyB,KAAK,QACLF,KAAK,OACLL,MAAM,SACNQ,gBAAgB,EAChBF,IAAKF,KAAKf,gBAPd,YAUET,EAAAC,EAAAC,cAAA,SACEyB,KAAK,QACLF,KAAK,OACLL,MAAM,WACNM,IAAKF,KAAKd,kBAdd,YAmBAV,EAAAC,EAAAC,cAAA,UAAQyB,KAAK,SAASL,UAAU,SAAhC,mBA3EiBhB,IAAMuB,WCwBxB,SAASC,EAAiBC,GAC/B,OAAOA,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,OCKtCC,2LA5BI,IAAAC,EACeZ,KAAKzB,MAAMsC,MAAjClB,EADOiB,EACPjB,MAAOL,EADAsB,EACAtB,KAAMO,EADNe,EACMf,KAErB,OAAKF,GAAUL,GAASO,EAGtBrB,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,WACbtB,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,oBAAY4B,EAAiBX,IAC7BnB,EAAAC,EAAAC,cAAA,qBAAUmB,GACVrB,EAAAC,EAAAC,cAAA,mBAAW4B,EAAiBhB,KAPK,sCAerC,OACEd,EAAAC,EAAAC,cAAA,WACGsB,KAAKc,iBAENtC,EAAAC,EAAAC,cAAA,oBAvBcI,IAAMuB,kBCuBbU,mLArBX,IAAMC,EAAYhB,KAAKzB,MAAMyC,UACvBC,EAAWD,EAEb,uBADA,uCAEJ,OACExC,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,cACZmB,EACDzC,EAAAC,EAAAC,cAACwC,EAAA,gBAAD,CAAiBC,UAAU,OAAOrB,UAAU,aAC1CtB,EAAAC,EAAAC,cAACwC,EAAA,cAAD,CACEE,WAAW,YACXC,IAAKL,EACLM,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE7BhD,EAAAC,EAAAC,cAAA,YAAOsC,aAfKlC,IAAMuB,WC0DfoB,cArDb,SAAAA,EAAYlD,GAAO,IAAAgB,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAA1B,KAAAyB,IACjBlC,EAAAmC,OAAAE,EAAA,EAAAF,CAAA1B,KAAA0B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA9B,KAAMzB,KAORY,cAAgB,SAAA0B,GAAS,IACflB,EAAsBkB,EAAtBlB,MAAOL,EAAeuB,EAAfvB,KAAMO,EAASgB,EAAThB,KAGjBmB,EAAY,IAGVe,EHvBH,SAA+BlC,GACpC,OAAO,IAAImC,MAAOC,cAAgBpC,EGsBdqC,CAAsBrC,GACxCmB,GAA0B,EAAZe,EAAgBf,EAAa,IAE3CmB,QAAQC,IAAI,8BAA4BL,EAAWf,GAEnDA,EHxBG,SAAuBqB,GAC5B,IAAIC,EAEJ,OAAQD,GACN,IAAK,UACHC,EAAa,IACb,MACF,IAAK,YACHA,EAAa,KACb,MACF,IAAK,WACHA,EAAa,KAMjB,OAAOA,EGOOC,CAAc5C,GAASqB,EAGnCA,EAAYwB,WHRT,SAAqBlD,GAC1B,MAAgB,WAATA,EAAoB,IAAM,IGORmD,CAAYnD,GAAQ0B,GAAW0B,QAAQ,GAG9D,IAAMC,EAAY,CAChBhD,QACAL,OACAO,QAGFN,EAAKqD,SAAS,CACZ5B,UAAWA,EACXH,MAAO8B,KAhCTpD,EAAKsD,MAAQ,CACX7B,UAAW,GACXH,MAAO,IAJQtB,wEAuCjB,OACEf,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,cACbtB,EAAAC,EAAAC,cAACoE,EAAD,CAAQnE,OAAO,wCAEfH,EAAAC,EAAAC,cAAA,OAAKoB,UAAU,yBACbtB,EAAAC,EAAAC,cAACqE,EAAD,CAAY5D,cAAea,KAAKb,gBAChCX,EAAAC,EAAAC,cAACsE,EAAD,CAAShC,UAAWhB,KAAK6C,MAAM7B,UAAWH,MAAOb,KAAK6C,MAAMhC,QAC5DrC,EAAAC,EAAAC,cAACuE,EAAD,CAAWjC,UAAWhB,KAAK6C,MAAM7B,qBA/CzBX,aCKE6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b8c434e1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => {\n  return (\n    <header>\n      <h1>{props.titulo}</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nclass Formulario extends React.Component {\n  // refs son para leer los valores de los campos de un formulario\n  marcaRef = React.createRef();\n  yearRef = React.createRef();\n  planBasicoRef = React.createRef();\n  planCompletoRef = React.createRef();\n\n  cotizarSeguro = e => {\n    e.preventDefault();\n    // leer el plan\n    const plan = this.planBasicoRef.current.checked ? \"basico\" : \"completo\";\n\n    // Obtener los datos\n\n    // crear el objeto\n    const infoAuto = {\n      marca: this.marcaRef.current.value,\n      year: this.yearRef.current.value,\n      plan: plan\n    };\n\n    // enviarlo al componente principal PADRE\n    this.props.cotizarSeguro(infoAuto);\n\n    // resetear el formulario\n    // e.currentTarget.reset()\n  };\n\n  render() {\n    return (\n      <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\n        <div className=\"campo\">\n          <label>Marca</label>\n          <select name=\"marca\" ref={this.marcaRef}>\n            <option value=\"americano\">Americano</option>\n            <option value=\"europeo\">Europeo</option>\n            <option value=\"asiatico\">Asiatico</option>\n          </select>\n        </div>\n\n        <div className=\"campo\">\n          <label>Año</label>\n          <select name=\"year\" ref={this.yearRef}>\n            <option value=\"2018\">2018</option>\n            <option value=\"2017\">2017</option>\n            <option value=\"2016\">2016</option>\n            <option value=\"2015\">2015</option>\n            <option value=\"2014\">2014</option>\n            <option value=\"2013\">2013</option>\n            <option value=\"2012\">2012</option>\n            <option value=\"2011\">2011</option>\n            <option value=\"2010\">2010</option>\n            <option value=\"2009\">2009</option>\n            <option value=\"2008\">2008</option>\n          </select>\n        </div>\n        <div className=\"campo\">\n          <label>Plan:</label>\n          <input\n            type=\"radio\"\n            name=\"plan\"\n            value=\"basico\"\n            defaultChecked={true}\n            ref={this.planBasicoRef}\n          />\n          Básico\n          <input\n            type=\"radio\"\n            name=\"plan\"\n            value=\"completo\"\n            ref={this.planCompletoRef}\n          />\n          Completo\n        </div>\n\n        <button type=\"submit\" className=\"boton\">\n          Cotizar\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Formulario;\n","export function obtenerDiferenciaAnio(year) {\n  return new Date().getFullYear() - year;\n}\n\nexport function calcularMarca(modelo) {\n  let incremento;\n\n  switch (modelo) {\n    case \"europeo\":\n      incremento = 1.3;\n      break;\n    case \"americano\":\n      incremento = 1.15;\n      break;\n    case \"asiatico\":\n      incremento = 1.05;\n      break;\n    default:\n      break;\n  }\n\n  return incremento;\n}\nexport function obtenerPlan(plan) {\n  return plan === \"basico\" ? 1.2 : 1.5;\n}\nexport function primeraMayuscula(texto) {\n  return texto.charAt(0).toUpperCase() + texto.slice(1);\n}\n","import React from \"react\";\nimport { primeraMayuscula } from \"../helper.js\";\n\nclass Resumen extends React.Component {\n  mostrarResumen() {\n    const { marca, plan, year } = this.props.datos;\n\n    if (!marca || !plan || !year) return null;\n\n    return (\n      <div className=\"resumen\">\n        <h2>Resumen de Cotización</h2>\n        <li>Marca: {primeraMayuscula(marca)}</li>\n        <li>Año: {year}</li>\n        <li>Plan: {primeraMayuscula(plan)}</li>\n      </div>\n    );\n\n    console.log(marca, plan, year, \"desde resumen\");\n  }\n\n  render() {\n    return (\n      <div>\n        {this.mostrarResumen()}\n\n        <div />\n      </div>\n    );\n  }\n}\n\nexport default Resumen;\n","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Resultado extends React.Component {\n  render() {\n    const resultado = this.props.resultado;\n    const mensaje = !resultado\n      ? \"Elije marca, Año y tipo de seguro\"\n      : \"El total es: € \";\n    return (\n      <div className=\"gran-total\">\n        {mensaje}\n        <TransitionGroup component=\"span\" className=\"resultado\">\n          <CSSTransition\n            classNames=\"resultado\"\n            key={resultado}\n            timeout={{ enter: 500, exit: 500 }}\n          >\n            <span>{resultado}</span>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default Resultado;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport Formulario from \"./Formulario\";\nimport Resumen from \"./Resumen\";\nimport Resultado from \"./Resultado\";\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from \"../helper\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resultado: \"\",\n      datos: {}\n    };\n  }\n\n  cotizarSeguro = datos => {\n    const { marca, plan, year } = datos;\n\n    // Agregar una base de 2000\n    let resultado = 2000;\n\n    // Obtener la diferenia de años y por cada año restar un 3%\n    const diferenia = obtenerDiferenciaAnio(year);\n    resultado -= (diferenia * 3 * resultado) / 100;\n\n    console.log(\"la diferencia de años es\", diferenia, resultado);\n    // Americano 15% Asiatico 5% y Europeo 30% de incremento\n    resultado = calcularMarca(marca) * resultado;\n\n    // Plan bacsico o completo\n    resultado = parseFloat(obtenerPlan(plan) * resultado).toFixed(2);\n\n    // ya tenemos el costo del resultado y lo pasamos al state\n    const datosAuto = {\n      marca,\n      plan,\n      year\n    };\n\n    this.setState({\n      resultado: resultado,\n      datos: datosAuto\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n        <Header titulo=\"Cotizador de seguro de vehículos\" />\n\n        <div className=\"contenedor-formulario\">\n          <Formulario cotizarSeguro={this.cotizarSeguro} />\n          <Resumen resultado={this.state.resultado} datos={this.state.datos} />\n          <Resultado resultado={this.state.resultado} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}